use core::fmt;

use sql_lexer::{Span, Token, TokenKind};

use crate::error::{parse_error, ParseError, ParseErrorType};

#[derive(Debug, PartialEq, Clone, Copy)]
pub struct Keyword {
    location: Span,
    kind: KeywordKind,
}

impl Keyword {
    pub fn new(location: Span, kind: KeywordKind) -> Self {
        Self { location, kind }
    }
}

impl Default for Keyword {
    fn default() -> Self {
        Self {
            location: Default::default(),
            kind: KeywordKind::Select,
        }
    }
}

impl<'a> TryFrom<Token<'a>> for Keyword {
    type Error = ParseError<'a>;

    fn try_from(value: Token) -> Result<Self, Self::Error> {
        let keyword_kind = match value.kind() {
            TokenKind::Abs => KeywordKind::Abs,
            TokenKind::Acos => KeywordKind::Acos,
            TokenKind::All => KeywordKind::All,
            TokenKind::Alter => KeywordKind::Alter,
            TokenKind::And => KeywordKind::And,
            TokenKind::Any => KeywordKind::Any,
            TokenKind::As => KeywordKind::As,
            TokenKind::Asc => KeywordKind::Asc,
            TokenKind::Asin => KeywordKind::Asin,
            TokenKind::Atan => KeywordKind::Atan,
            TokenKind::Autoincrement => KeywordKind::Autoincrement,
            TokenKind::Avg => KeywordKind::Avg,
            TokenKind::Begin => KeywordKind::Begin,
            TokenKind::Between => KeywordKind::Between,
            TokenKind::Bigint => KeywordKind::Bigint,
            TokenKind::Bit => KeywordKind::Bit,
            TokenKind::By => KeywordKind::By,
            TokenKind::Cascade => KeywordKind::Cascade,
            TokenKind::Case => KeywordKind::Case,
            TokenKind::Cast => KeywordKind::Cast,
            TokenKind::Ceil => KeywordKind::Ceil,
            TokenKind::Ceiling => KeywordKind::Ceiling,
            TokenKind::Char => KeywordKind::Char,
            TokenKind::Column => KeywordKind::Column,
            TokenKind::Columns => KeywordKind::Columns,
            TokenKind::Commit => KeywordKind::Commit,
            TokenKind::Commited => KeywordKind::Commited,
            TokenKind::Constraint => KeywordKind::Constraint,
            TokenKind::Cos => KeywordKind::Cos,
            TokenKind::Cot => KeywordKind::Cot,
            TokenKind::Count => KeywordKind::Count,
            TokenKind::Create => KeywordKind::Create,
            TokenKind::Current => KeywordKind::Current,
            TokenKind::Date => KeywordKind::Date,
            TokenKind::Datetime => KeywordKind::Datetime,
            TokenKind::Day => KeywordKind::Day,
            TokenKind::Dayofweek => KeywordKind::Dayofweek,
            TokenKind::Dayofyear => KeywordKind::Dayofyear,
            TokenKind::Decimal => KeywordKind::Decimal,
            TokenKind::Declare => KeywordKind::Declare,
            TokenKind::Degrees => KeywordKind::Degrees,
            TokenKind::Default => KeywordKind::Default,
            TokenKind::Delete => KeywordKind::Delete,
            TokenKind::DenseRank => KeywordKind::DenseRank,
            TokenKind::Desc => KeywordKind::Desc,
            TokenKind::Describe => KeywordKind::Describe,
            TokenKind::Distinct => KeywordKind::Distinct,
            TokenKind::Do => KeywordKind::Do,
            TokenKind::Drop => KeywordKind::Drop,
            TokenKind::Else => KeywordKind::Else,
            TokenKind::End => KeywordKind::End,
            TokenKind::Engine => KeywordKind::Engine,
            TokenKind::Exec => KeywordKind::Exec,
            TokenKind::Execute => KeywordKind::Execute,
            TokenKind::Exists => KeywordKind::Exists,
            TokenKind::Exp => KeywordKind::Exp,
            TokenKind::False => KeywordKind::False,
            TokenKind::Fetch => KeywordKind::Fetch,
            TokenKind::First => KeywordKind::First,
            TokenKind::FirstValue => KeywordKind::FirstValue,
            TokenKind::Float => KeywordKind::Float,
            TokenKind::Floor => KeywordKind::Floor,
            TokenKind::Following => KeywordKind::Following,
            TokenKind::Foreign => KeywordKind::Foreign,
            TokenKind::From => KeywordKind::From,
            TokenKind::Full => KeywordKind::Full,
            TokenKind::Function => KeywordKind::Function,
            TokenKind::Getdate => KeywordKind::Getdate,
            TokenKind::Group => KeywordKind::Group,
            TokenKind::Having => KeywordKind::Having,
            TokenKind::Hour => KeywordKind::Hour,
            TokenKind::Hours => KeywordKind::Hours,
            TokenKind::Identity => KeywordKind::Identity,
            TokenKind::If => KeywordKind::If,
            TokenKind::In => KeywordKind::In,
            TokenKind::Increment => KeywordKind::Increment,
            TokenKind::Index => KeywordKind::Index,
            TokenKind::Inner => KeywordKind::Inner,
            TokenKind::Insert => KeywordKind::Insert,
            TokenKind::Integer => KeywordKind::Integer,
            TokenKind::Intersect => KeywordKind::Intersect,
            TokenKind::Int => KeywordKind::Int,
            TokenKind::Into => KeywordKind::Into,
            TokenKind::Is => KeywordKind::Is,
            TokenKind::Join => KeywordKind::Join,
            TokenKind::Key => KeywordKind::Key,
            TokenKind::Lag => KeywordKind::Lag,
            TokenKind::Last => KeywordKind::Last,
            TokenKind::LastValue => KeywordKind::LastValue,
            TokenKind::Lead => KeywordKind::Lead,
            TokenKind::Left => KeywordKind::Left,
            TokenKind::Like => KeywordKind::Like,
            TokenKind::Limit => KeywordKind::Limit,
            TokenKind::Log => KeywordKind::Log,
            TokenKind::Log10 => KeywordKind::Log10,
            TokenKind::Max => KeywordKind::Max,
            TokenKind::Microsecond => KeywordKind::Microsecond,
            TokenKind::Microseconds => KeywordKind::Microseconds,
            TokenKind::Millisecond => KeywordKind::Millisecond,
            TokenKind::Milliseconds => KeywordKind::Milliseconds,
            TokenKind::Min => KeywordKind::Min,
            TokenKind::Minute => KeywordKind::Minute,
            TokenKind::Month => KeywordKind::Month,
            TokenKind::Nanosecond => KeywordKind::Nanosecond,
            TokenKind::Nanoseconds => KeywordKind::Nanoseconds,
            TokenKind::Nchar => KeywordKind::Nchar,
            TokenKind::Next => KeywordKind::Next,
            TokenKind::Not => KeywordKind::Not,
            TokenKind::Null => KeywordKind::Null,
            TokenKind::Nullif => KeywordKind::Nullif,
            TokenKind::Numeric => KeywordKind::Numeric,
            TokenKind::Nvarchar => KeywordKind::Nvarchar,
            TokenKind::Offset => KeywordKind::Offset,
            TokenKind::On => KeywordKind::On,
            TokenKind::Only => KeywordKind::Only,
            TokenKind::Or => KeywordKind::Or,
            TokenKind::Order => KeywordKind::Order,
            TokenKind::Outer => KeywordKind::Outer,
            TokenKind::Over => KeywordKind::Over,
            TokenKind::Partition => KeywordKind::Partition,
            TokenKind::Password => KeywordKind::Password,
            TokenKind::Percent => KeywordKind::Percent,
            TokenKind::Pi => KeywordKind::Pi,
            TokenKind::Power => KeywordKind::Power,
            TokenKind::Preceding => KeywordKind::Preceding,
            TokenKind::Procedure => KeywordKind::Procedure,
            TokenKind::Radians => KeywordKind::Radians,
            TokenKind::Rands => KeywordKind::Rands,
            TokenKind::Range => KeywordKind::Range,
            TokenKind::Rank => KeywordKind::Rank,
            TokenKind::Real => KeywordKind::Real,
            TokenKind::Return => KeywordKind::Return,
            TokenKind::Returns => KeywordKind::Returns,
            TokenKind::Revoke => KeywordKind::Revoke,
            TokenKind::Right => KeywordKind::Right,
            TokenKind::Role => KeywordKind::Role,
            TokenKind::Rollback => KeywordKind::Rollback,
            TokenKind::Round => KeywordKind::Round,
            TokenKind::Row => KeywordKind::Row,
            TokenKind::Rowid => KeywordKind::Rowid,
            TokenKind::Rows => KeywordKind::Rows,
            TokenKind::RowNumber => KeywordKind::RowNumber,
            TokenKind::Second => KeywordKind::Second,
            TokenKind::Select => KeywordKind::Select,
            TokenKind::Set => KeywordKind::Set,
            TokenKind::Sign => KeywordKind::Sign,
            TokenKind::Sin => KeywordKind::Sin,
            TokenKind::Smallint => KeywordKind::Smallint,
            TokenKind::Snapshot => KeywordKind::Snapshot,
            TokenKind::Some => KeywordKind::Some,
            TokenKind::Sqrt => KeywordKind::Sqrt,
            TokenKind::Square => KeywordKind::Square,
            TokenKind::Stage => KeywordKind::Stage,
            TokenKind::Start => KeywordKind::Start,
            TokenKind::Statistics => KeywordKind::Statistics,
            TokenKind::Stdev => KeywordKind::Stdev,
            TokenKind::Stdevp => KeywordKind::Stdevp,
            TokenKind::Sum => KeywordKind::Sum,
            TokenKind::Table => KeywordKind::Table,
            TokenKind::Tan => KeywordKind::Tan,
            TokenKind::Temp => KeywordKind::Temp,
            TokenKind::Then => KeywordKind::Then,
            TokenKind::Ties => KeywordKind::Ties,
            TokenKind::Time => KeywordKind::Time,
            TokenKind::Tinyint => KeywordKind::Tinyint,
            TokenKind::Top => KeywordKind::Top,
            TokenKind::Transaction => KeywordKind::Transaction,
            TokenKind::Trigger => KeywordKind::Trigger,
            TokenKind::True => KeywordKind::True,
            TokenKind::Truncate => KeywordKind::Truncate,
            TokenKind::Unbounded => KeywordKind::Unbounded,
            TokenKind::Uncommitted => KeywordKind::Uncommitted,
            TokenKind::Union => KeywordKind::Union,
            TokenKind::Unique => KeywordKind::Unique,
            TokenKind::Unlock => KeywordKind::Unlock,
            TokenKind::Update => KeywordKind::Update,
            TokenKind::Upper => KeywordKind::Upper,
            TokenKind::Use => KeywordKind::Use,
            TokenKind::User => KeywordKind::User,
            TokenKind::Uuid => KeywordKind::Uuid,
            TokenKind::Value => KeywordKind::Value,
            TokenKind::Values => KeywordKind::Values,
            TokenKind::Varbinary => KeywordKind::Varbinary,
            TokenKind::Varchar => KeywordKind::Varchar,
            TokenKind::Var => KeywordKind::Var,
            TokenKind::Varp => KeywordKind::Varp,
            TokenKind::Week => KeywordKind::Week,
            TokenKind::When => KeywordKind::When,
            TokenKind::Where => KeywordKind::Where,
            TokenKind::Window => KeywordKind::Window,
            TokenKind::With => KeywordKind::With,
            TokenKind::Year => KeywordKind::Year,
            _ => return parse_error(ParseErrorType::ExpectedKeyword),
        };

        Ok(Self {
            location: value.location(),
            kind: keyword_kind,
        })
    }
}

impl fmt::Display for Keyword {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}", self.kind)
    }
}

impl fmt::Display for KeywordKind {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match self {
            KeywordKind::Abs => f.write_str("abs"),
            KeywordKind::Acos => f.write_str("acos"),
            KeywordKind::All => f.write_str("all"),
            KeywordKind::Alter => f.write_str("alter"),
            KeywordKind::And => f.write_str("and"),
            KeywordKind::Any => f.write_str("any"),
            KeywordKind::As => f.write_str("as"),
            KeywordKind::Asc => f.write_str("asc"),
            KeywordKind::Asin => f.write_str("asin"),
            KeywordKind::Atan => f.write_str("atan"),
            KeywordKind::Autoincrement => f.write_str("autoincrement"),
            KeywordKind::Avg => f.write_str("avg"),
            KeywordKind::Begin => f.write_str("begin"),
            KeywordKind::Between => f.write_str("between"),
            KeywordKind::Bigint => f.write_str("bigint"),
            KeywordKind::Bit => f.write_str("bit"),
            KeywordKind::By => f.write_str("by"),
            KeywordKind::Cascade => f.write_str("cascade"),
            KeywordKind::Case => f.write_str("case"),
            KeywordKind::Cast => f.write_str("cast"),
            KeywordKind::Ceil => f.write_str("ceil"),
            KeywordKind::Ceiling => f.write_str("ceiling"),
            KeywordKind::Char => f.write_str("char"),
            KeywordKind::Column => f.write_str("column"),
            KeywordKind::Columns => f.write_str("columns"),
            KeywordKind::Commit => f.write_str("commit"),
            KeywordKind::Commited => f.write_str("commited"),
            KeywordKind::Constraint => f.write_str("constraint"),
            KeywordKind::Cos => f.write_str("cos"),
            KeywordKind::Cot => f.write_str("cot"),
            KeywordKind::Count => f.write_str("count"),
            KeywordKind::Create => f.write_str("create"),
            KeywordKind::Current => f.write_str("current"),
            KeywordKind::Date => f.write_str("date"),
            KeywordKind::Datetime => f.write_str("datetime"),
            KeywordKind::Day => f.write_str("day"),
            KeywordKind::Dayofweek => f.write_str("dayofweek"),
            KeywordKind::Dayofyear => f.write_str("dayofyear"),
            KeywordKind::Decimal => f.write_str("decimal"),
            KeywordKind::Declare => f.write_str("declare"),
            KeywordKind::Degrees => f.write_str("degrees"),
            KeywordKind::Default => f.write_str("default"),
            KeywordKind::Delete => f.write_str("delete"),
            KeywordKind::DenseRank => f.write_str("denserank"),
            KeywordKind::Desc => f.write_str("desc"),
            KeywordKind::Describe => f.write_str("describe"),
            KeywordKind::Distinct => f.write_str("distinct"),
            KeywordKind::Do => f.write_str("do"),
            KeywordKind::Drop => f.write_str("drop"),
            KeywordKind::Else => f.write_str("else"),
            KeywordKind::End => f.write_str("end"),
            KeywordKind::Engine => f.write_str("engine"),
            KeywordKind::Exec => f.write_str("exec"),
            KeywordKind::Execute => f.write_str("execute"),
            KeywordKind::Exists => f.write_str("exists"),
            KeywordKind::Exp => f.write_str("exp"),
            KeywordKind::False => f.write_str("false"),
            KeywordKind::Fetch => f.write_str("fetch"),
            KeywordKind::First => f.write_str("first"),
            KeywordKind::FirstValue => f.write_str("firstvalue"),
            KeywordKind::Float => f.write_str("float"),
            KeywordKind::Floor => f.write_str("floor"),
            KeywordKind::Following => f.write_str("following"),
            KeywordKind::Foreign => f.write_str("foreign"),
            KeywordKind::From => f.write_str("from"),
            KeywordKind::Full => f.write_str("full"),
            KeywordKind::Function => f.write_str("function"),
            KeywordKind::Getdate => f.write_str("getdate"),
            KeywordKind::Group => f.write_str("group"),
            KeywordKind::Having => f.write_str("having"),
            KeywordKind::Hour => f.write_str("hour"),
            KeywordKind::Hours => f.write_str("hours"),
            KeywordKind::Identity => f.write_str("identity"),
            KeywordKind::If => f.write_str("if"),
            KeywordKind::In => f.write_str("in"),
            KeywordKind::Increment => f.write_str("increment"),
            KeywordKind::Index => f.write_str("index"),
            KeywordKind::Inner => f.write_str("inner"),
            KeywordKind::Insert => f.write_str("insert"),
            KeywordKind::Integer => f.write_str("integer"),
            KeywordKind::Intersect => f.write_str("intersect"),
            KeywordKind::Int => f.write_str("int"),
            KeywordKind::Into => f.write_str("into"),
            KeywordKind::Is => f.write_str("is"),
            KeywordKind::Join => f.write_str("join"),
            KeywordKind::Key => f.write_str("key"),
            KeywordKind::Lag => f.write_str("lag"),
            KeywordKind::Last => f.write_str("last"),
            KeywordKind::LastValue => f.write_str("lastvalue"),
            KeywordKind::Lead => f.write_str("lead"),
            KeywordKind::Left => f.write_str("left"),
            KeywordKind::Like => f.write_str("like"),
            KeywordKind::Limit => f.write_str("limit"),
            KeywordKind::Log => f.write_str("log"),
            KeywordKind::Log10 => f.write_str("log10"),
            KeywordKind::Max => f.write_str("max"),
            KeywordKind::Microsecond => f.write_str("microsecond"),
            KeywordKind::Microseconds => f.write_str("microseconds"),
            KeywordKind::Millisecond => f.write_str("millisecond"),
            KeywordKind::Milliseconds => f.write_str("milliseconds"),
            KeywordKind::Min => f.write_str("min"),
            KeywordKind::Minute => f.write_str("minute"),
            KeywordKind::Month => f.write_str("month"),
            KeywordKind::Nanosecond => f.write_str("nanosecond"),
            KeywordKind::Nanoseconds => f.write_str("nanoseconds"),
            KeywordKind::Nchar => f.write_str("nchar"),
            KeywordKind::Next => f.write_str("next"),
            KeywordKind::Not => f.write_str("not"),
            KeywordKind::Null => f.write_str("null"),
            KeywordKind::Nullif => f.write_str("nullif"),
            KeywordKind::Numeric => f.write_str("numeric"),
            KeywordKind::Nvarchar => f.write_str("nvarchar"),
            KeywordKind::Offset => f.write_str("offset"),
            KeywordKind::On => f.write_str("on"),
            KeywordKind::Only => f.write_str("only"),
            KeywordKind::Or => f.write_str("Or"),
            KeywordKind::Order => f.write_str("order"),
            KeywordKind::Outer => f.write_str("outer"),
            KeywordKind::Over => f.write_str("over"),
            KeywordKind::Partition => f.write_str("partition"),
            KeywordKind::Password => f.write_str("password"),
            KeywordKind::Percent => f.write_str("percent"),
            KeywordKind::Pi => f.write_str("pi"),
            KeywordKind::Power => f.write_str("power"),
            KeywordKind::Preceding => f.write_str("preceding"),
            KeywordKind::Procedure => f.write_str("procedure"),
            KeywordKind::Radians => f.write_str("radians"),
            KeywordKind::Rands => f.write_str("rands"),
            KeywordKind::Range => f.write_str("range"),
            KeywordKind::Rank => f.write_str("rank"),
            KeywordKind::Real => f.write_str("real"),
            KeywordKind::Return => f.write_str("return"),
            KeywordKind::Returns => f.write_str("returns"),
            KeywordKind::Revoke => f.write_str("revoke"),
            KeywordKind::Right => f.write_str("right"),
            KeywordKind::Role => f.write_str("role"),
            KeywordKind::Rollback => f.write_str("rollback"),
            KeywordKind::Round => f.write_str("round"),
            KeywordKind::Row => f.write_str("row"),
            KeywordKind::Rowid => f.write_str("rowid"),
            KeywordKind::Rows => f.write_str("rows"),
            KeywordKind::RowNumber => f.write_str("rownumber"),
            KeywordKind::Second => f.write_str("second"),
            KeywordKind::Select => f.write_str("select"),
            KeywordKind::Set => f.write_str("set"),
            KeywordKind::Sign => f.write_str("sign"),
            KeywordKind::Sin => f.write_str("sin"),
            KeywordKind::Smallint => f.write_str("smallint"),
            KeywordKind::Snapshot => f.write_str("snapshot"),
            KeywordKind::Some => f.write_str("some"),
            KeywordKind::Sqrt => f.write_str("sqrt"),
            KeywordKind::Square => f.write_str("square"),
            KeywordKind::Stage => f.write_str("stage"),
            KeywordKind::Start => f.write_str("start"),
            KeywordKind::Statistics => f.write_str("statistics"),
            KeywordKind::Stdev => f.write_str("stdev"),
            KeywordKind::Stdevp => f.write_str("stdevp"),
            KeywordKind::Sum => f.write_str("sum"),
            KeywordKind::Table => f.write_str("table"),
            KeywordKind::Tan => f.write_str("tan"),
            KeywordKind::Temp => f.write_str("temp"),
            KeywordKind::Then => f.write_str("then"),
            KeywordKind::Ties => f.write_str("ties"),
            KeywordKind::Time => f.write_str("time"),
            KeywordKind::Tinyint => f.write_str("tinyint"),
            KeywordKind::Top => f.write_str("top"),
            KeywordKind::Transaction => f.write_str("transaction"),
            KeywordKind::Trigger => f.write_str("trigger"),
            KeywordKind::True => f.write_str("true"),
            KeywordKind::Truncate => f.write_str("truncate"),
            KeywordKind::Unbounded => f.write_str("unbounded"),
            KeywordKind::Uncommitted => f.write_str("uncommitted"),
            KeywordKind::Union => f.write_str("union"),
            KeywordKind::Unique => f.write_str("unique"),
            KeywordKind::Unlock => f.write_str("unlock"),
            KeywordKind::Update => f.write_str("update"),
            KeywordKind::Upper => f.write_str("upper"),
            KeywordKind::Use => f.write_str("use"),
            KeywordKind::User => f.write_str("user"),
            KeywordKind::Uuid => f.write_str("uuid"),
            KeywordKind::Value => f.write_str("value"),
            KeywordKind::Values => f.write_str("values"),
            KeywordKind::Varbinary => f.write_str("varbinary"),
            KeywordKind::Varchar => f.write_str("varchar"),
            KeywordKind::Var => f.write_str("var"),
            KeywordKind::Varp => f.write_str("varp"),
            KeywordKind::Week => f.write_str("week"),
            KeywordKind::When => f.write_str("when"),
            KeywordKind::Where => f.write_str("where"),
            KeywordKind::Window => f.write_str("window"),
            KeywordKind::With => f.write_str("with"),
            KeywordKind::Year => f.write_str("year"),
        }
    }
}

#[derive(Debug, PartialEq, Clone, Copy)]
pub enum KeywordKind {
    Abs,
    Acos,
    All,
    Alter,
    And,
    Any,
    As,
    Asc,
    Asin,
    Atan,
    Autoincrement,
    Avg,
    Begin,
    Between,
    Bigint,
    Bit,
    By,
    Cascade,
    Case,
    Cast,
    Ceil,
    Ceiling,
    Char,
    Column,
    Columns,
    Commit,
    Commited,
    Constraint,
    Cos,
    Cot,
    Count,
    Create,
    Current,
    Date,
    Datetime,
    Day,
    Dayofweek,
    Dayofyear,
    Decimal,
    Declare,
    Degrees,
    Default,
    Delete,
    DenseRank,
    Desc,
    Describe,
    Distinct,
    Do,
    Drop,
    Else,
    End,
    Engine,
    Exec,
    Execute,
    Exists,
    Exp,
    False,
    Fetch,
    First,
    FirstValue,
    Float,
    Floor,
    Following,
    Foreign,
    From,
    Full,
    Function,
    Getdate,
    Group,
    Having,
    Hour,
    Hours,
    Identity,
    If,
    In,
    Increment,
    Index,
    Inner,
    Insert,
    Integer,
    Intersect,
    Int,
    Into,
    Is,
    Join,
    Key,
    Lag,
    Last,
    LastValue,
    Lead,
    Left,
    Like,
    Limit,
    Log,
    Log10,
    Max,
    Microsecond,
    Microseconds,
    Millisecond,
    Milliseconds,
    Min,
    Minute,
    Month,
    Nanosecond,
    Nanoseconds,
    Nchar,
    Next,
    Not,
    Null,
    Nullif,
    Numeric,
    Nvarchar,
    Offset,
    On,
    Only,
    Or,
    Order,
    Outer,
    Over,
    Partition,
    Password,
    Percent,
    Pi,
    Power,
    Preceding,
    Procedure,
    Radians,
    Rands,
    Range,
    Rank,
    Real,
    Return,
    Returns,
    Revoke,
    Right,
    Role,
    Rollback,
    Round,
    Row,
    Rowid,
    Rows,
    RowNumber,
    Second,
    Select,
    Set,
    Sign,
    Sin,
    Smallint,
    Snapshot,
    Some,
    Sqrt,
    Square,
    Stage,
    Start,
    Statistics,
    Stdev,
    Stdevp,
    Sum,
    Table,
    Tan,
    Temp,
    Then,
    Ties,
    Time,
    Tinyint,
    Top,
    Transaction,
    Trigger,
    True,
    Truncate,
    Unbounded,
    Uncommitted,
    Union,
    Unique,
    Unlock,
    Update,
    Upper,
    Use,
    User,
    Uuid,
    Value,
    Values,
    Varbinary,
    Varchar,
    Var,
    Varp,
    Week,
    When,
    Where,
    Window,
    With,
    Year,
}
